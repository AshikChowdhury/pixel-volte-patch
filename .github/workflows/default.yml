name: default

on:
  push:
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: install ktlint
        run: |
          curl -sSLO https://github.com/pinterest/ktlint/releases/download/0.48.2/ktlint && chmod a+x ktlint && sudo mv ktlint /usr/local/bin/
      - name: run ktlint
        run: |
          ktlint --reporter=checkstyle,output=build/ktlint-report.xml
        continue-on-error: true
      - uses: yutailang0119/action-ktlint@v3
        with:
          report-path: build/*.xml # Support glob patterns by https://www.npmjs.com/package/@actions/glob
        continue-on-error: false # If annotations contain error of severity, action-ktlint exit 1.
  build-debug-apk:
    needs: [lint]
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: build APK
        uses: ./.github/workflows/build-apk.yml
        with:
          build-type: debug
      - uses: actions/github-script@v6
        with:
          script: |
            const opts = github.rest.actions.listWorkflowRunArtifacts({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: context.runId,
            })
            const artifacts = await github.paginate(opts)
            for (const artifact in artifacts) {
              if (artifact.name.indexOf("apk") != -1) {
                await github.rest.issues.createComment({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: `Click [here](${artifact.url}) to download the APK to test this pull request.`
                })
              }
            }
    secrets:
      key-alias: ${{ secrets.DEBUG_KEY_ALIAS }}
      keystore: ${{ secrets.DEBUG_KEYSTORE_B64 }}
      key-password: ${{ secrets.DEBUG_KEY_PASSWORD }}
  build-release-apk:
    needs: [lint]
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    uses: ./.github/workflows/build-apk.yml
    with:
      build-type: release
    secrets:
      key-alias: ${{ secrets.KEY_ALIAS }}
      keystore: ${{ secrets.KEYSTORE_B64 }}
      key-password: ${{ secrets.KEY_PASSWORD }}
  release:
    needs: [build-release-apk]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download APK
        id: download
        uses: actions/download-artifact@v3
        with:
          name: ${{ needs.build-release-apk.outputs.filename }}
      - name: Release to GitHub
        uses: softprops/action-gh-release@v1
        with:
          name: "v${{ github.ref_name }}"
          generate_release_notes: true
          files: dev.bluehouse.enablevolte.apk
